name: Laravel CI/CD

on:
  push:
    branches:
      - development
      
  pull_request:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up environment
        run: |
          echo "Setting up environment..."
          echo "Skipping dependency installation on Windows environment."

  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    
    - name: Install Dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Set up application for SQLite
      run: |
        touch database/database.sqlite
        echo "DB_CONNECTION=sqlite" >> .env
        echo "DB_DATABASE=${{ github.workspace }}/database/database.sqlite" >> .env

    - name: Generate key
      run: php artisan key:generate
    
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit

  deploy:
    needs: [laravel-tests, build]
    runs-on: ubuntu-latest
    steps:
      - name: üöö Get latest code
        uses: actions/checkout@v3
      
      - name: üìÇ Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: laravel-vibhuti.c1.is
          username:  ${{ secrets.FTPUSER }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /
      - name: üöÄ Run migration
        run: php artisan migrate --force
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    
      - name: üåê Start Laravel application
        run: |
          php artisan serve &
          sleep 10
    
      - name: ‚è±Ô∏è Wait for Laravel to start
        run: sleep 10
    
      - name: üöÄ Run tests or additional commands
        run: php artisan test

  send_notification:
    runs-on: ubuntu-latest
    needs: [laravel-tests, build, deploy]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 14

    - name: Install dependencies
      run: npm install

    - name: Send notification
      run: |
        # Use SendGrid API key to authenticate
        SENDGRID_API_KEY=$SENDGRID_API_KEY  # Set your SendGrid API key as a secret in your repository

        # Replace the following variables with your actual values
        TO_EMAIL=rakesh@vibhuti.biz
        FROM_EMAIL=rakesh@vibhuti.biz
        SUBJECT="GitHub Action Notification"
        BODY="Your custom notification message goes here."

        # Send email using curl and SendGrid API
        curl -X "POST" "https://api.sendgrid.com/v3/mail/send" \
          -H "Authorization: Bearer $SENDGRID_API_KEY" \
          -H "Content-Type: application/json" \
          -d $'{
            "personalizations": [
              {
                "to": [
                  {
                    "email": "'"$TO_EMAIL"'"
                  }
                ],
                "subject": "'"$SUBJECT"'"
              }
            ],
            "from": {
              "email": "'"$FROM_EMAIL"'"
            },
            "content": [
              {
                "type": "text/plain",
                "value": "'"$BODY"'"
              }
            ]
          }'

      env:
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          