name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
        
    - name: Install Dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Set up application for SQLite
      run: |
        touch database/database.sqlite
        echo "DB_CONNECTION=sqlite" >> .env
        echo "DB_DATABASE=${{ github.workspace }}/database/database.sqlite" >> .env

    - name: Generate key
      run: php artisan key:generate
        
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
        
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit

  build:
    runs-on: ubuntu-latest
    needs: laravel-tests
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    
    - name: Build Application
      run: |
        # Your build commands go here
        # Compile assets, optimize code, etc.
        # For demonstration purposes, echo a build message
        echo "Build successful!"

  deploy:
    needs: [laravel-tests, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install New Relic CLI
        run: |
          curl -Ls https://download.newrelic.com/install/newrelic-cli/scripts/install.sh | bash

      - name: Run New Relic Installation
        run: |
          sudo NEW_RELIC_API_KEY=${{ secrets.NEW_RELIC_API_KEY }} NEW_RELIC_ACCOUNT_ID=${{ secrets.NEW_RELIC_ACCOUNT_ID }} /usr/local/bin/newrelic install -n php-agent-installer

      # Add additional steps for your application deployment if needed

      # Notify New Relic about the deployment
      - name: Notify New Relic
        run: |
          # Replace the following command with the actual command or API call to notify New Relic about the deployment
          echo "Notifying New Relic about the deployment"
        env:
          NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}

  rollback-check:
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    
    - name: Rollback Check
      run: |
        # Your rollback check commands go here
        # Check if the previous version is working as expected
        # For demonstration purposes, echo a rollback check message
        echo "Rollback check successful!"

  rollback:
    runs-on: ubuntu-latest
    needs: rollback-check
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    
    - name: Rollback Deployment
      run: |
        # Your rollback commands go here
        # Rollback to the previous version in case of issues
        # For demonstration purposes, echo a rollback message
        echo "Rollback successful!"

  notifications:
    runs-on: ubuntu-latest
    needs: [laravel-tests, build, deploy, rollback]
    
    steps:
    - name: Notify Stakeholders
      run: |
        # Your notification commands go here
        # Example: Send notifications via Slack, email, or other channels
        # For demonstration purposes, echo a notification
        echo "Notifications sent to relevant stakeholders!"
